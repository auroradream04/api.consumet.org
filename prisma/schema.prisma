generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Movie {
  id          String       @id @default(uuid())
  mediaId     String       @unique
  title       String
  image       String       @db.VarChar(500)
  type        String?
  coverImage  String?      @db.VarChar(500)
  description String?      @db.VarChar(1000)
  production  String?
  country     String?
  duration    String?
  rating      Float?
  releaseDate String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  episodes    Episode[]
  casts       MovieCast[]  @relation("MovieToMovieCast")
  genres      MovieGenre[] @relation("MovieToMovieGenre")
  tags        MovieTag[]   @relation("MovieToMovieTag")
}

model Episode {
  id        String            @id @default(uuid())
  movieId   String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  episodeId String            @unique
  title     String
  movie     Movie             @relation(fields: [movieId], references: [id])
  sources   EpisodeSource[]
  subtitle  EpisodeSubtitle[]

  @@index([movieId], map: "Episode_movieId_fkey")
}

model MovieGenre {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  genre     String   @unique
  Movies    Movie[]  @relation("MovieToMovieGenre")
}

model MovieCast {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cast      String   @unique
  Movies    Movie[]  @relation("MovieToMovieCast")
}

model MovieTag {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tag       String   @unique
  Movies    Movie[]  @relation("MovieToMovieTag")
}

model EpisodeSource {
  id        String   @id @default(uuid())
  url       String   @unique @db.VarChar(500)
  quality   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  episodeId String
  Episode   Episode  @relation(fields: [episodeId], references: [id])

  @@index([episodeId], map: "EpisodeSource_episodeId_fkey")
}

model EpisodeSubtitle {
  id        String   @id @default(uuid())
  url       String   @unique @db.VarChar(500)
  language  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  episodeId String
  Episode   Episode  @relation(fields: [episodeId], references: [id])

  @@index([episodeId], map: "EpisodeSubtitle_episodeId_fkey")
}
